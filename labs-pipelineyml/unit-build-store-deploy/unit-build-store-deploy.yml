resources:
- name: music-repo
  type: git
  source:
    uri: git@github.com:klng19/spring-music.git
    branch: master
    private_key: {{music_private_key}}
- name: version
  type: semver
  source:
    bucket: {{music-pipeline-artifacts-bucket}}
    endpoint: {{s3-endpoint}}
    key: current-version
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
    initial_version: 3.0.0
- name: music-release
  type: s3
  source:
    bucket: {{music-pipeline-artifacts-bucket}}
    endpoint: {{s3-endpoint}}
    regexp: spring-music-(.*).war
    access_key_id: {{s3-access-key-id}}
    secret_access_key: {{s3-secret-access-key}}
- name: cf-uat
  type: cf
  source:
    api: {{cf-api-uat}}
    organization: {{uat-organization}}
    username: {{deploy-uat-username}}
    password: {{deploy-uat-password}}
    skip_cert_check: true
    space: {{uat-space}}

jobs:
- name: unit
  plan:
  - get: music-repo
    trigger: true
  - task: unit
    file: music-repo/ci/tasks/unit.yml

- name: build-binary
  serial: true
  plan:
  - get: music-repo
    passed: [unit]
    trigger: true
  - get: version
    params: {bump: patch}
  - task: build-artifact
    file: music-repo/ci/tasks/build-artifact.yml
    timeout: 5m
  - put: music-release
    params:
      file: build/spring-music-*.war
  - put: music-repo
    params:
      repository: music-repo
      tag: version/number
  - put: version
    params: {file: version/number}
- name: deploy-to-dev
  serial: true
  public: true
  plan:
  - aggregate:
    - get: music-release
      passed: [build-binary]
      trigger: true
    - get: music-repo
      passed: [build-binary]
      trigger: true
    - get: version
  - task: prepare-app-manifest
    file: music-repo/ci/tasks/app-manifest-prep.yml
  - put: cf-uat
    params:
      manifest: app-manifest-output/manifest.yml
